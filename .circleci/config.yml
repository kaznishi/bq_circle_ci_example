version: 2.1

commands:
  setup_credential:
    steps:
      - run:
          name: Setup Credential
          command: |
            mkdir -p /etc/google/
            echo "${CI_GOOGLE_SERVICE_KEY_BASE64}" | base64 --decode --ignore-garbage > "${GOOGLE_APPLICATION_CREDENTIALS}"
  setup_bq_envvar:
    steps:
      - run:
          name: set env BQ_DATASET
          command: echo "export BQ_DATASET=${BQ_DATASET_PREFIX}_`date '+%Y%m%d'`_${CIRCLE_SHA1:0:7}" >> $BASH_ENV

  make_dataset:
    steps:
      - run:
          name: Authorization
          command: gcloud auth activate-service-account --key-file ${GOOGLE_APPLICATION_CREDENTIALS}
      - run:
          name: make dataset
          command: make bq/setup

executors:
  golang:
    docker:
      - image: golang:1.13-stretch
        environment:
          GOOGLE_APPLICATION_CREDENTIALS: /etc/google/application_default_credentials.json
          GO111MODULE: "on"
  gcloud:
    docker:
      - image: google/cloud-sdk:latest
        environment:
          GOOGLE_APPLICATION_CREDENTIALS: /etc/google/application_default_credentials.json

jobs:
  build:
    executor: golang
    working_directory: /go/src/github.com/kaznishi/bq_circle_ci_example
    steps:
      - checkout
      - run:
          name: check compile
          command: go build main.go
  bq_setup:
    executor: gcloud
    steps:
      - checkout
      - setup_credential
      - setup_bq_envvar
      - make_dataset
  test:
    executor: golang
    working_directory: /go/src/github.com/kaznishi/bq_circle_ci_example
    steps:
      - checkout
      - setup_credential
      - setup_bq_envvar
      - run:
          name: test
          command: go test -v
  bq_clean:
    executor: gcloud
    steps:
      - checkout
      - setup_credential
      - run:
          name: Authorization
          command: gcloud auth activate-service-account --key-file ${GOOGLE_APPLICATION_CREDENTIALS}
      - run:
          name: clean 2 days ago datasets
          command: bq ls --project_id=$GCP_PROJECT --datasets | grep ${BQ_DATASET_PREFIX}_`date -d '2 days ago' '+%Y%m%d'` | xargs ./scripts/bq_delete_datasets || true

workflows:
  version: 2
  default_flow:
    jobs:
      - build
      - bq_setup
      - test:
          requires:
            - build
            - bq_setup

  cleanup_test_dataset:
    triggers:
      - schedule:
          cron: "35 14 * * *"
          filters:
            branches:
              only: master
    jobs:
      - bq_clean
